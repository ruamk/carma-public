//-
  Form field templates.
//-
  Field template must have id in form of <type>-field-template,
  where <type> is field type to be rendered using this
  template, or <name>-<type>-field-template, where <name> is
  the name of field of given type which will be rendered with
  this template. Client code must prefer named templates to
  only-typed ones.

include _form_utils.pug

.field-template#AvarcomTasks-field-template
  +fieldControlGroup
    // 'onChange' is a function that takes new list as first argument,
    // so observable is, but keeping API clean in sense of immutability.
    avarcom-tasks(params=`
      selectedTasks: {{ name }},
      serviceStatus: status,
      onChange:      {{ name }},
    `)

.field-template#textarea-field-template
  +fieldControlGroup
    textarea.form-control(
      name="{{ name }}"
      rows="7"
      style="height: 10em;"
      data-bind=`
        value: {{ name }}Text,
        valueUpdate: ['afterkeydown', 'afterpaste', 'change'],
        disabled: {{ name }}Disabled,
        wysihtml5: $data.view === 'dictionaries-view',

        {{# meta.regexp }}
          css: { warning: {{name}}Regexp }
        {{/ meta.regexp }}
      `)

.field-template#plainTextarea-field-template
  +fieldControlGroup
    textarea.form-control(
      name="{{ name }}"
      rows="7"
      style="height: 10em;"
      data-bind=`
        value: {{ name }}Text,
        valueUpdate: ['afterkeydown', 'afterpaste', 'change'],
        disabled: {{ name }}Disabled,

        {{# meta.regexp }}
          css: { warning: {{name}}Regexp }
        {{/ meta.regexp }}
      `)

.field-template#statictext-field-template
  .control-group
    span(data-bind="text: {{ name }}Text")

.field-template#text-field-template
  +fieldControlGroup
    +defaultInput("Text", "", "afterkeydown")

.field-template#password-field-template
  +fieldControlGroup
    +defaultInput("", "", "change")(placeholder="********")
    .text-right
      button.btn.btn-info(type="button"
        onclick="doPick('passwordPicker', '{{ name }}', event.target);")
        i.glyphicon.glyphicon-refresh
        | &nbsp;Создать пароль

.field-template#datetime-field-template
  +fieldControlGroup
    +defaultInput("DateTime", "addMask: 'datetime',", "change")

.field-template#datetime-local-field-template
  +fieldControlGroup
    +localDateTimeInput("DateTime", "addMask: 'datetime'", "change")

.field-template#list-of-times-field-template
  div(style="margin-top: -15px;" data-bind="foreach: {{ name }}List")
    .col-sm-4
    p.col-sm-8(
      style="padding-left: 15px; color: #555; font-size: 90%",
      data-bind="text: $data")

.field-template#date-field-template
  +fieldControlGroup
    +dateInput("", "", "change")

.field-template#interval-datetime-field-template
  +fieldControlGroup
    .row
      .col-sm-6
        +rawDateInput(".begin", "", 'change')
          span.input-group-addon
            span.glyphicon.glyphicon-calendar
      .col-sm-6
        +rawDateInput(".end", "", 'change')
          span.input-group-addon
            span.glyphicon.glyphicon-calendar

.field-template#phone-field-template
  +fieldControlGroup
    .input-group.input-group-sm
      +defaultInput("","","afterkeydown")(
        onkeydown="kdoPick('{{ meta.picker }}', '{{ name }}', 73, event);")
      span.field-vip-label.label.label-danger(data-bind="visible: {{name}}Vip")
        i.glyphicon.glyphicon-star
        | VIP
      span.input-group-addon
        span.glyphicon.stolen-icon-phone(onclick="doPick('{{ meta.picker }}',\
                                                    '{{ name }}', event.target);")

.field-template#force-find-dictionary-field-template
  +dict("Local", "glyphicon-search")

.field-template#dictionary-field-template
  +dict("Local", "glyphicon-chevron-down")

.field-template#dictionary-many-field-template
  +dictMany("Many", "glyphicon-chevron-down")

.field-template#dictionary-with-btn-field-template
  .form-group.has-feedback(data-bind="css: { 'has-error': {{name}}Not }, \
                                      visible: {{name}}Visible \
                                     ")
    label.col-sm-4.control-label
      +labelWithInfo("{{name}}")
    .col-sm-8
      .input-group.input-group-sm
        +dictInputChevron("Local", "glyphicon-chevron-down")
        span.input-group-addon.btn-success(
            data-bind="click: {{name}}BtnClick, disabled: {{name}}BtnDisabled")
          span.glyphicon.glyphicon-share-alt

//- Picker which fills fields with stored data
.field-template#picker-field-template
  +fieldControlGroup
    +pickerInput

.field-template#coords-with-button
  +fieldControlGroup
    button.btn.btn-small.btn-success(
      style="position:absolute; right:0; bottom:40px;"
      data-bind="\
        click: locationSharingBtn.click,\
        attr: { title: locationSharingBtn.tooltip },\
        disabled: locationSharingBtn.disabled")
      | Определить местоположение
    +pickerInput

//- radio widget for flat dictionary fields -->
.field-template#radio-field-template
  +fieldControlGroup
    | {{# dictionary.source }}
    label.radio
    //- Mustache.js contexts support bubbling -->
    input.form-control(type="radio"
          name="{{ name }}"
          value="{{ value }}"
          data-bind="checked: {{ name }}, disabled: {{ name }}Disabled")
    | {{ label }}
    | {{/ dictionary.source }

//- May be used for plain rendering of flat dictionaries as well -->
.field-template#select-field-template
  +fieldControlGroup
    select(name="{{ name }}"
           data-bind="\n\
                      value: {{ name }},\n\
                      valueUpdate: 'change',\n\
                      disabled: {{ name }}Disabled")
    | {{# dictionary.entries }}
    option(value="{{value}}")
      | {{meta.label}}
    | {{/ dictionary.entries }}

///////////////////////////////////////////////////////////

// type=Bool field
#Bool-field-template.field-template(type='text/template')
  +checkboxTpl("{{ name }}")

// type=checkbox field
#checkbox-field-template.field-template(type='text/template')
  +checkboxTpl("{{ name }}")

#checkbutton-field-template.field-template(type='text/template')
  .form-group
    .checkbox.checkbutton
      label
        input(type='checkbox'
              name='{{ name }}'
              data-bind="checked: {{ name }},\
                         valueUpdate: 'change',\
                         disabled: {{ name }}Disabled")
        span.btn.btn-success(
          data-bind='disabled: {{ name }}Disabled')
          | {{ meta.label }}
        span.save-result

#contract_isActive-field-template.field-template(type='text/template')
  .form-group(data-bind="visible: {{name}}Visible")
    .col-sm-4
    label.col-sm-8.control-label(style="text-align: left")
      +checkboxField("{{ name }}")
      span(data-bind="visible: {{name}}Disabled() && {{name}}()")
        | Для деактивации контракта обратитесь к куратору программы

// // OpenLayers map container field
#map-field-template.field-template(type='text/template')
  .control-group
    .controls
      .osMap(name='{{ name }}' id="{{ viewName }}-{{ name }}")

// NOP here — references are rendered after model has loaded
#reference-field-template.field-template(type='text/template')
  .form-group
    .row.col-sm-11.col-sm-offset-1
      span.accordion(id="{{ modelName }}-{{ cid }}-{{ name }}-references")
    .row.col-sm-offset-4.col-sm-8
      | {{# meta.model}}
      #add-reference-button
        button.dropdown-toggle.btn.btn-action(
          data-bind='bindClick: add{{ name }}'
          type='button')
          span.glyphicon.glyphicon-plus
          | {{ meta.reference-label }}
      | {{/ meta.model}}

// Container field template for attachment reference list, with upload
// form. See also files-reference-template for each item template.
#inline-uploader-field-template.field-template(type='text/template')
  +fieldControlGroup
    form.form(
      style='margin-bottom: 0;'
      data-bind=`visible: {{name}}IsFormVisible`)
      upload-file-field(params=`
        uploadHandler: {{name}}UploadHandler,
        isLoading: {{name}}IsProcessing,
      `)
    div(data-bind=`foreach: {{name}}Reference`)
      div
        a.text-danger(href='#' data-bind=`click: $parent.{{name}}DetachFile`)
          | × &nbsp;
        span
          span.glyphicon.glyphicon-folder-open
          | &nbsp;
          a.file-name(data-bind=`attr: {href: filenameUrl}, text: filename`)

#image-uploader-field-template.field-template
  +fieldControlGroup
    input.form-control(type="text"
      placeholder="Ctrl-V чтобы вставить картинку из буфера"
      data-bind=`
        value: {{name}}FakeText,
        event: { focus: {{name}}OnFocus, blur: {{name}}OnBlur }
      `)
    .input-group-btn
      span.btn.btn-default.btn-file
        span.glyphicon.glyphicon-folder-open
        input(type="file" accept="image/*" data-bind=`
          event: {change: function() { {{name}}UploadHandler($element)} }`)
  .row
    .col-sm-4
    .col-sm-4(style="margin-bottom: 10px")
      img(style="max-height:128px" data-bind=`attr: { src: {{name}} }`)
    .col-sm-4
      b(data-bind=`text: {{name}}Warning`)

//- Special template used to render first field of group in parent view.
#group-field-template.field-template(type='text/template')
  .form-group.has-feedback
    label.control-label.col-sm-4
      +labelWithInfo("{{ name }}")

    .col-sm-8
      .input-group.input-group-sm
        input.form-control(type='text'
                        name='name'
                        autocomplete='off'
                        style="{{# meta.transform }}\n\
                               text-transform:{{meta.transform}};\n\
                               {{/ meta.transform }}"
                        onfocus="showComplex('{{ viewName }}', '{{ name }}');"
                        data-bind="value: {{ name }},\
                                   valueUpdate: 'afterkeydown',\
                                   disabled: {{ name }}Disabled")
        +savingSpinner
        span.input-group-addon(
            onclick="showComplex('{{ viewName }}', '{{ name }}');")
          span.glyphicon.glyphicon-share

#group-datetime-local-field-template.field-template(type='text/template')
  .form-group.has-feedback(
      data-bind='visible: $data.partnerDelay_payment && $data.partnerDelay_payment.visible')
    label.control-label.col-sm-4
    .col-sm-8
      | Оплата:&nbsp;
      span(data-bind=
             'text: $data.partnerDelay_payment ? $data.partnerDelay_payment.text : ""')

  .form-group.has-feedback
    label.control-label.col-sm-4
      +labelWithInfo("{{ name }}")

    .col-sm-8
      .input-group.input-group-sm
        input.form-control(type='text'
                        name='name'
                        autocomplete='off'
                        style="{{# meta.transform }}\n\
                               text-transform:{{meta.transform}};\n\
                               {{/ meta.transform }}"
                        onfocus="showComplex('{{ viewName }}', '{{ name }}');"
                        data-bind="value: {{ name }}DateTime,\
                                   valueUpdate: ['change', 'afterpaste'],\
                                   disabled: {{ name }}Disabled")
        +savingSpinner
        span.input-group-addon(
            onclick="showComplex('{{ viewName }}', '{{ name }}');")
          span.glyphicon.glyphicon-share

      .input-group.input-group-sm
        .btn-block.hidden
        .svc-status-button.btn-block(
          data-toggle="tooltip"
          data-html="true"
          data-placement="bottom"
          data-bind='attr: { title: buttons.partnerDelay.tooltip },\
                     visible: buttons.partnerDelay.visible')
          button.btn.btn-small.btn-info(
            style="width:100%"
            data-bind='\
              click: buttons.partnerDelay.click,\
              disabled: buttons.partnerDelay.disabled')
            span(data-bind='text: buttons.partnerDelay.text')

// Template for fields with unknown type
.field-template#unknown-field-template
  .form-control
    span.label.label-danger
      | (Ошибка — поле {{ names }} неизвестного типа)

// Template for fields with unknown type
.field-template#dict-objects-field-template
  +fieldControlGroup
    .form-horizontal(data-bind="foreach: {{ name }}Objects")
      .form-group
        label.control-label.col-sm-4
          span(data-bind="text: keyLocal")
          a.text-danger(href="#"
              data-bind="click: $parent.{{name}}DeleteObj")
              | &nbsp;×
        .col-sm-8
          .input-group.input-group-sm
            input.form-control(type="text"
              autocomplete="off"
              style="{{# meta.transform }}\n\
                     text-transform:{{meta.transform}};\n\
                     {{/ meta.transform }}"
              data-bind="value: value,\n\
                         valueUpdate: 'afterkeydown',\n\
                         {{# meta.regexp }}\n\
                         css: { 're-failed': regexp }\n\
                         {{/ meta.regexp }}")
      | {{# meta.showNote }}
      .form-group
        label.control-label.col-sm-4 {{ meta.noteLabel }}
        .col-sm-8
         .input-group.input-group-sm
          input.form-control.pane-span.focusable(type="text"
              autocomplete="off"
              data-bind="value: note, valueUpdate: 'afterkeydown'")
      | {{/ meta.showNote }}

    .dropup
      button.dropdown-toggle.btn.btn-action(type="button"
        data-toggle="dropdown")
        span.glyphicon.glyphicon-plus
        | &nbsp;{{ meta.addLabel }}
      ul.dropdown-menu(data-bind="foreach: {{name}}KeyDictionary")
        li
          a(data-bind="text: label, click: $parent.{{name}}AddObj"
            href="#")

#Case-caseStatus-field-template.field-template
  +fieldControlGroup
    +dictInput("Local")
    .input-group.input-group-sm.btn-vert-block
      .btn-block.hidden
      .btn-block(
        data-toggle="tooltip"
        data-html="true"
        data-placement="bottom"
        data-bind='attr: { title: buttons.needInfo.tooltip }, \
                   visible: buttons.needInfo.visible')
        button.btn.btn-small.btn-info(
          style="width: 100%"
          id="{{name}}-needInfo"
          data-bind='disabled: buttons.needInfo.disabled,\
                     click: buttons.needInfo.click')
          span.glyphicon.glyphicon-info-sign
          |&nbsp;
          span(data-bind='text: buttons.needInfo.text')

#svcStatus-field-template.field-template
  +fieldControlGroup
    +dictInput("Local")
    .input-group.input-group-sm.btn-vert-block
      // invisible block to keep top margin when changing visibility
      .btn-block.hidden
      .svc-status-button.btn-block(
        data-bind="attr: { title: buttons.backoffice.tooltip },\
                   visible: buttons.backoffice.visible")
        button.btn.btn-small.btn-info(
          style="width:100%"
          data-bind='disabled: buttons.backoffice.disabled,\
                     click: buttons.backoffice.click')
          span.glyphicon.glyphicon-play
          |&nbsp;
          span(data-bind='text: buttons.backoffice.text')
      .svc-status-button.btn-block(
        data-bind="visible: buttons.recallClient.visible")
        button.btn.btn-small.btn-info(
          style="width:100%"
          data-bind='click: buttons.recallClient.click')
          span.glyphicon.glyphicon-time
          | &nbsp;
          span(data-bind='text: buttons.recallClient.text')
      .svc-status-button.btn-block(
        data-toggle="tooltip"
        data-html="true"
        data-placement="bottom"
        data-bind='attr: { title: buttons.cancel.tooltip },\
                   visible: buttons.cancel.visible')
        button.btn.btn-small.btn-info(
          style="width:100%"
          data-bind='disabled: buttons.cancel.disabled,\
                     click: buttons.cancel.click')
          span.glyphicon.glyphicon-fast-backward
          |&nbsp;
          span(data-bind='text: buttons.cancel.text')
      .svc-status-button.btn-block(
        data-bind="visible: buttons.anotherPSA.visible")
        button.btn.btn-small.btn-info(
          style="width:100%"
          data-bind='click: buttons.anotherPSA.click')
          span(data-bind='text: buttons.anotherPSA.text')

#partnerWarnedInTime-btn-field-template.field-template
  .form-group(data-bind="visible: {{name}}Visible")
    label.col-sm-4.control-label
      span.label.label-danger(data-bind="visible: partnerWarnedInTime() === false")
        | Опоздание
      span.label.label-success(data-bind="visible: partnerWarnedInTime() === true")
        | Вовремя
    .col-sm-8
      button.btn.btn-small.btn-info(
        style="width:100%"
        data-bind="\
          click: partnerWarnedInTimeBtn.click,\
          attr: { title: partnerWarnedInTimeBtn.tooltip },\
          disabled: partnerWarnedInTimeBtn.disabled")
        | Расчёт

#partner-field-template.field-template
  +fieldControlGroup
      input.form-control(type='text'
        name='{{name}}'
        data-bind='value: {{name}}Btn.value')
      .legacy-partner-button(
        data-bind="text: {{name}}Btn.text,\
                   click: {{name}}Btn.switch,\
                   visible: {{name}}Btn.newName() != null")
      span.input-group-addon(
          data-bind='click: openPartnerSearch.bind($data, \'{{ name }}\')')
        span.glyphicon.glyphicon-search

#partner_services-field-template.field-template
  +fieldControlGroup
    #partner_services-accordion.panel-group
      .panel(data-bind="foreach: _serviceModels")
        .accordion-toggle(
          data-toggle="collapse"
          data-parent="#partner_services-accordion"
          data-bind="css: {error: !noError()},\
              attr: {'data-target': '#partner_service' + $index()}")
            i.glyphicon.glyphicon-chevron-down
              | &nbsp;
            span(data-bind="text: name")
            i.glyphicon.glyphicon-remove.pull-right(
              title='Удалить'
              data-bind='bindClick: delService')
        .panel-collapse.collapse(data-bind="attr: {id: 'partner_service' + $index()}")
          .panel-body
            .control-group.tight
              div(data-bind='visible: !subtypes')
                label
                  | Приоритет: &nbsp; ПН
                  input(type='text' data-bind="textInput: priority1,\
                    css: {error: _error().indexOf('priority1') >= 0}")
                  | &nbsp; ПБГ
                  input(type='text' data-bind="textInput: priority2,\
                    css: {error: _error().indexOf('priority2') >= 0}")
                  | &nbsp; ПБЗ
                  input(type='text' data-bind="textInput: priority3,\
                    css: {error: _error().indexOf('priority3') >= 0}")
              div(data-bind='visible: subtypes')
                div(data-bind="foreach: subtypes")
                  .panel.panel-default
                    .panel-heading
                      span(data-bind="text: name")
                      i.glyphicon.glyphicon-remove.pull-right(
                        title='Удалить'
                        data-bind='bindClick: _delSubtype')
                    .panel-body
                      .control-group.tight
                        label
                          | Приоритет: &nbsp; ПН
                          input(type='text' data-bind="textInput: priority1,\
                            css: {error: _error().indexOf('priority1') >= 0}")
                          | &nbsp; ПБГ
                          input(type='text' data-bind="textInput: priority2,\
                            css: {error: _error().indexOf('priority2') >= 0}")
                          | &nbsp; ПБЗ
                          input(type='text' data-bind="textInput: priority3,\
                            css: {error: _error().indexOf('priority3') >= 0}")
                .dropdown
                  button.dropdown-toggle.btn.btn-action(
                    data-toggle='dropdown')
                      i.glyphicon.glyphicon-plus
                      | &nbsp; Добавить подтип
                  ul.dropdown-menu(data-bind="foreach: _subtypesDict.filteredItems")
                    li
                      a(data-bind="text: label, click: $parent._addSubtype" href="#")
              label
                | Процент за ложный вызов: &nbsp;
                input(type='text' data-bind="textInput: fine,\
                  css: {error: _error().indexOf('fine') >= 0}")
              table.tarif-options
                thead
                  tr
                    th(width="50%") Тарифная опция
                    th(width="20%") Цена 1
                    th(width="20%") Цена 2
                    th(width="10%")
                tbody
                  // ko foreach: options
                  tr
                    td
                      input(type='text' data-bind="textInput: name,\
                        css: {error: _error().indexOf('name') >= 0}")
                    td
                      input(type='text' data-bind="textInput: price1,\
                        css: {error: _error().indexOf('price1') >= 0}")
                    td
                      input(type='text' data-bind="textInput: price2,\
                        css: {error: _error().indexOf('price2') >= 0}")
                    td(align="center")
                      i.glyphicon.glyphicon-remove(
                        title='Удалить'
                        data-bind='bindClick: delOption')
                  // /ko
                  tr
                    td(colspan=4)
                      button.btn.btn-action(data-bind='bindClick: addOption')
                        i.glyphicon.glyphicon-plus
                        | &nbsp; Добавить опцию

    .dropdown
      button.dropdown-toggle.btn.btn-action(
        data-toggle="dropdown"
        data-bind='bindClick: _addService')
          i.glyphicon.glyphicon-plus
          | &nbsp; Добавить услугу
      ul.dropdown-menu(data-bind="foreach: _serviceTypes.filteredItems")
        li
          a(data-bind="text: label, click: $parent._addService(id)" href="#")

// Modal dialog launch button
#modalDialogButton-field-template.field-template
  .control-group
    .controls.checkbutton
      label.inline
        button.btn.btn-danger(type='button'
          data-bind='disabled: {{ name }}Disabled, click: {{meta.click}}')
            | {{ meta.label}}

// NOP here — IdentList references are rendered after model has loaded
#IdentList-field-template.field-template
  .control-group
    .control-label
      label {{ meta.label }}
    .controls
      span.accordion(id="{{ modelName }}-{{ cid }}-{{ name }}-references")
    | {{# meta.model}}
    #add-reference-button.controls
      button.dropdown-toggle.btn.btn-action(
        data-bind='bindClick: add{{ name }}'
        type='button')
        i.icon.icon-plus
        | {{ meta.reference-label }}
    | {{/ meta.model}}

// File upload template
#file-field-template.field-template(type='text/template')
  span.glyphicon.glyphicon-folder-open
  | &nbsp;
  a.file-name(data-bind='attr: { href: {{ name }}Url }, text: {{ name }}')

// Modal dialog template
#modalDialog-field-template.field-template(type='text/template')
  .modal.fade(id="{{ id }}-modal")
    .modal-dialog
      .modal-content
        .modal-header
          .alert(id="{{ id }}-alert-container")
            button.close(type='button') ×
            .alert-message
          h4.modal-title {{ title }}
        .modal-body.form-horizontal(id="{{ id }}-form")
        .modal-footer
          button.btn.btn-primary(id="{{ id }}-save") {{ saveLabel }}
          button.btn(data-dismiss='modal', aria-hidden='true') {{ cancelLabel}}

// Group view container
.group-template(id="-group-template" type='text/template')
  fieldset.complex-field(id="{{ refView }}" style='display: none;')
    row.complex-field-close-container
      button.close.complex-field-close(onclick='hideComplex()')
        span(aria-hidden="true") &times;
        span.sr-only Close
    .row
      .col-md-12
        .content.form-horizontal

//
  Template for one of references.

  Must generate id="{{ refView }}" element which
  will hold contents of referenced model.
  Its class must be is {{ refClass }}.

mixin refCommon(headingDataBind)
  .panel-group(id="{{ refView }}-group")
    .panel.panel-default
      .panel-heading(id="{{ refView }}-link"
                       data-parent="{{ refView }}-group"
                       data-target="\#{{ refView }}-head"
                       data-toggle="collapse"
                       data-bind=headingDataBind)
        h4.panel-title
          block
      .panel-collapse.collapse(id="{{ refView }}-head")
        .panel-body
          .form-horizontal(class="{{ refClass }}" id="{{ refView }}")
          // Instance contents are rendered here

mixin simpleRefHdr(name, bindName)
  a.icon.icon-remove
  a(data-bind=`text: ${bindName}`)= name

#services-reference-template.reference-template
  +refCommon('style: {"background-color": _svcColor}')
    span &nbsp;
    a.btn(data-bind='text: _meta.model.title') Услуга…
    span &nbsp;
    a.btn.btn-mini.btn-default(
      data-bind="attr: { href: '#printSrv/' + id() }"
      target='_blank')
      span.glyphicon.glyphicon-print
      | &nbsp;Печать
    // ko foreach: topLevelButtons
    br(data-bind='visible: visible')
    button.btn.btn-mini.btn-danger(
      data-bind='visible: visible,\
         css: {"btn-danger":  type == "danger",\
               "btn-warning": type == "warning",\
               "btn-success": type == "success"\
              },\
         click: click')
      span(data-bind='text: text')
    // /ko

// SubProgram.services (SubProgramService model) reference template
#subprogram-services-reference-template.reference-template
  +refCommon
    +simpleRefHdr("Услуга", "typeLocal")

#subprogram-contacts-reference-template.reference-template
  +refCommon
    a.icon.icon-remove
    span(data-bind='text: [name(), email(), phone()].join(\' \')')

#subprogram-contract-fields-reference-template.reference-template
  +refCommon
    +simpleRefHdr("Поле", "contractFieldLocal")

#actions-reference-template.reference-template
  +refCommon('style: {"background-color": _actColor}')
    span.glyphicon.glyphicon-flag(data-bind='visible: myAction')
    span(data-bind='visible: myAction')
      | &nbsp;
    a(style='padding-left: 0', data-bind='html: actionNameLocal')
      | Действие…

mixin caseFilesList
  ul.unstyled(data-bind="foreach: safelyGet(\'filesReference\')")
    li
      span.glyphicon.glyphicon-folder-open
      | &nbsp;
      a.file-name(data-bind="attr: { href: filenameUrl }, text: filename")

// Default case group view template
#default-case-group-template.group-template
  fieldset#default-case.complex-field.default-complex-field
    p
      b Кто звонил:&nbsp;
      span(data-bind=`text: safelyGet('contact_name')`)
      span(data-bind=`text: " " + safelyGet("contact_phone1")`)
      span(data-bind=`visible: vip`)
        | &nbsp;
        span.label.label-danger
          i.glyphicon.glyphicon-star
          | VIP
      span(data-bind=`
        visible : contact_phone2,
        text    : ", " + safelyGet("contact_phone2"),
      `)
      span(data-bind=`
        visible : contact_phone3,
        text    : ", " + safelyGet("contact_phone3"),
      `)
      span(data-bind=`
        visible : contact_phone4,
        text    : ", " + safelyGet("contact_phone4"),
      `)
      span(data-bind=`if: isCreatedByEraGlonass`)
        br
        span.label.label-warning Заявка от ЭРА-ГЛОНАСС
    p(data-bind=`visible: safelyGet('car_make')`)
      b Автомобиль:&nbsp;
      span(data-bind=`text: safelyGet('car_makeLocal')`)
      | &nbsp;
      span(data-bind=`text: safelyGet('car_modelLocal')`)
      | &nbsp;
      span(data-bind=`text: safelyGet('car_plateNum')`)
    p(data-bind=`visible: safelyGet('caseAddress_address')`)
      b Адрес кейса:&nbsp;
      span(data-bind=`text: safelyGet('caseAddress_address')`)
      br
      span(data-bind=`text: safelyGet('caseAddress_comment')`)
    p(data-bind=`visible: safelyGet('caseAddress_cityLocal')`)
      b Регион:&nbsp;
      span(data-bind=`text: safelyGet('region')`)
    p(data-bind=`visible: safelyGet('caseAddress_cityLocal')`)
      b
        | Расчётное значение ожидания эвакуатора в
        | г.
        span(data-bind=`text: safelyGet('caseAddress_cityLocal')`)
        | :&nbsp;
      span#city-towage-average-time
    #contract
    .program
      #case-files(data-bind=`visible: hasFiles`)
        h4 Прикреплённые файлы
        +caseFilesList
        dl(data-bind=`foreach: servicesReference`)
          dt(data-bind=`
            visible : safelyGet('filesReference').length,
            text    : _meta.model.title,
          `)
            dd
              +caseFilesList

      #case-comments
        h4 Комментарий
        .form-group
          textarea.form-control#case-comments-i(rows='2', style="width: 100%;")
        .form-group
          button#case-comments-b.btn
            | Добавить комментарий
      #case-history
        h4(style="float: left") История по кейсу
        div(style="float: right")
          .btn-group.btn-group-sm(role="group")
            .btn.btn-default(
              title="Показать действия",
              data-bind=`css: {active: histShowActi}, click: histToggleActi`)
                i.glyphicon.glyphicon-briefcase
            .btn.btn-default(
              title="Показать комментарии",
              data-bind=`css: {active: histShowComm}, click: histToggleComm`)
                i.glyphicon.glyphicon-bullhorn
            .btn.btn-default(
              title="Показать отказы партнёров",
              data-bind=`css: {active: histShowCanc}, click: histToggleCanc`)
                i.glyphicon.glyphicon-remove-circle
            .btn.btn-default(
              title="Показать опоздания партнёров",
              data-bind=`css: {active: histShowDelay}, click: histToggleDelay`)
                i.glyphicon.glyphicon-time
            .btn.btn-default(
              title="Показать звонки",
              data-bind=`css: {active: histShowCall}, click: histToggleCall`)
                i.glyphicon.glyphicon-phone-alt
            .btn.btn-default(
              title="Показать SMS партнёрам",
              data-bind=`
                css   : {active: histShowPartnerSms},
                click : histTogglePartnerSms,
              `)
                i.glyphicon.glyphicon-envelope
            // ko if: isCreatedByEraGlonass()
            .btn.btn-default(
              title="Показать поступления «Карточек Вызова» ЭРА-ГЛОНАСС",
              data-bind=`
                css   : {active: histShowEGCallCard},
                click : histToggleEGCallCard,
              `)
                i.glyphicon.glyphicon-globe
            // /ko
            .btn.btn-default(
              title="Показать запросы на определение координат",
              data-bind=`
                css   : {active: histShowLocationSharing},
                click : histToggleLocationSharing,
              `)
                i.glyphicon.glyphicon-map-marker
          |
          |
          input.form-control(
            placeholder="Фильтр"
            style="display: inline-block; width: auto;"
            data-bind=`textInput: historyFilter`)
        div(style="clear:both")
        // ko foreach: historyItems
        .well.history-item(data-bind=`
          visible : visible,
          style   : {'background-color': color},
        `)
          div
            .history-datetime
              span(data-bind=`text: datetime`)
            // For that type "who" doesn't mean anything.
            // ko if: json.type !== 'eraGlonassIncomingCallCard'
            // ko if: json.type !== 'locationSharingResponse'
            .history-who
              span(data-bind=`text: who`)
            // /ko
            // /ko
            .history-body(data-bind=`with: json`)
              // ko if: $data.actiontype
              div
                i.glyphicon.glyphicon-briefcase
                | &nbsp;
                b
                  | Действие:&nbsp;
                span(data-bind=`text: actiontype`)
              div
                b
                  | Результат:&nbsp;
                span(data-bind=`text: actionresult`)
              // /ko
              // ko if: $data.servicelabel
              div
                b
                  | Услуга:&nbsp;
                span(data-bind=`text: servicelabel`)
              // /ko
              // ko if: $data.tasks
              div
                b
                  | Задачи:&nbsp;
                // ko foreach: $data.tasks
                br
                | &nbsp;
                input(type="checkbox" disabled data-bind=`checked: isChecked`)
                | &nbsp;
                span(data-bind="text: label")
                // /ko
              // /ko
              // ko if: $data.actioncomment
              div
                b
                  | Комментарий:&nbsp;
                span(data-bind=`text: actioncomment`)
              // /ko
              // ko if: $data.calltype
              div
                i.glyphicon.glyphicon-phone-alt
                | &nbsp;
                b
                  | Звонок:&nbsp;
                span(data-bind=`text: calltype`)
              // /ko
              // ko if: $data.type == 'comment'
              div
                i.glyphicon.glyphicon-bullhorn
                | &nbsp;
                b
                  | Комментарий:&nbsp;
                span(data-bind=`text: commenttext`)
              // /ko
              // ko if: $data.type == 'partnerCancel'
              div
                i.glyphicon.glyphicon-remove-circle
                | &nbsp;
                b
                  | Отказ партнёра:&nbsp;
                span(data-bind=`text: partnername`)
              div
                b
                  | Причина отказа:&nbsp;
                span(data-bind=`text: refusalreason`)
                span(data-bind=`visible: refusalcomment`)
                  | &nbsp;(
                span(data-bind=`text: refusalcomment`)
                span(data-bind=`visible: refusalcomment`)
                  | )
              // /ko
              // ko if: $data.type == 'partnerDelay'
              div
                i.glyphicon.glyphicon-time
                | &nbsp;
                b
                  | Опоздание партнёра:&nbsp;
                span(data-bind=`text: partnername`)
              div
                b
                  | Время опоздания:&nbsp;
                span(data-bind=`text: delayminutes`)
              div
                b
                  | Опоздание согласовано:&nbsp;
                span(data-bind=`text: delayconfirmed`)
              // /ko
              // ko if: $data.type === 'smsForPartner'
              div
                i.glyphicon.glyphicon-envelope
                | &nbsp;
                b
                  | Партнёру отправлено SMS:&nbsp;
                span(data-bind=`text: msgtext`)
                br
                b
                  | Телефон получателя:&nbsp;
                span(data-bind=`text: phone`)
                br
                b
                  | Статус отправки:&nbsp;
                span(data-bind=`text: deliverystatus`)
                = ' (обновлено: '
                span(data-bind=`text: mtime`)
                = ')'
              // /ko
              // ko if: $data.type === 'eraGlonassIncomingCallCard'
              div
                i.glyphicon.glyphicon-globe
                | &nbsp;
                b Поступление заявки на обслуживание от ЭРА-ГЛОНАСС.
              div
                b Идентификатор заявки на обслуживание:
                |
                |
                span(data-bind=`text: requestId`)
              div
                b Имя звонящего:
                |
                |
                span(data-bind=`text: $root.safeGetProp($data, [
                  'requestBody', 'fullName'
                ], '✗')`)
              div
                i.glyphicon.glyphicon-earphone
                | &nbsp;
                b Номера телефонов:
                div
                  i Терминала авто:
                  |
                  |
                  span(data-bind=`text: $root.safeGetProp($data, [
                    'requestBody', 'ivsPhoneNumber'
                  ], '✗')`)
                div
                  i Звонящий:
                  |
                  |
                  span(data-bind=`text: $root.safeGetProp($data, [
                    'requestBody', 'phoneNumber'
                  ], '✗')`)
              div
                b Транспорт:
                div
                  i VIN:
                  |
                  |
                  span(data-bind=`text: $root.safeGetProp($data, [
                    'requestBody', 'vehicle', 'vin'
                  ], '✗')`)
                div
                  i Регистрационный номер:
                  |
                  |
                  span(data-bind=`text: $root.safeGetProp($data, [
                    'requestBody', 'vehicle', 'plateNumber'
                  ], '✗')`)
              div
                b Описание местонахождения:
                |
                |
                span(data-bind=`text: $root.safeGetProp($data, [
                  'requestBody', 'location', 'description'
                ], '✗')`)
              div
                i.glyphicon.glyphicon-screenshot
                | &nbsp;
                b Координаты:
                div
                  i Широта:
                  |
                  |
                  span(data-bind=`text: ($root.safeGetProp($data, [
                    'requestBody', 'location', 'latitude'
                  ], 0) / (3600 * 1000)).toLocaleString('ru-RU', {
                    minimumFractionDigits: 6,
                    maximumFractionDigits: 6,
                  })`)
                  span °
                div
                  i Долгота:
                  |
                  |
                  span(data-bind=`text: ($root.safeGetProp($data, [
                    'requestBody', 'location', 'longitude'
                  ], 0) / (3600 * 1000)).toLocaleString('ru-RU', {
                    minimumFractionDigits: 6,
                    maximumFractionDigits: 6,
                  })`)
                  span °
              // /ko
              // ko if: $data.aetype
              div
                i.glyphicon.glyphicon-earphone
                | &nbsp;
                b
                  | Событие AVAYA:&nbsp;
                span(data-bind=`text: aetype`)
              // /ko
              // ko if: $data.aeinterlocutors
              div
                b
                  | Второй абонент:&nbsp;
                span(data-bind=`text: aeinterlocutors`)
              // /ko
              // ko if: $data.aecall
              div
                b
                  | Идентификатор звонка:&nbsp;
                span(data-bind=`text: aecall`)
              // /ko
              // ko if: $data.type === 'locationSharingRequest'
              div
                i.glyphicon.glyphicon-map-marker
                | &nbsp;
                b
                  | Клиенту отправлено SMS с запросом местоположения
              // /ko
              // ko if: $data.type === 'locationSharingResponse'
              div
                i.glyphicon.glyphicon-map-marker
                | &nbsp;
                b
                  | От клиента пришёл ответ с координатами:
                  | &nbsp;
                  a(data-bind=`
                    text: $data.lonlat,
                    attr: { target: '_blank', href: $data.mapUrl }`)
                div(style='float: right')
                  | &nbsp; (
                  a(href="#" data-bind=`click: $data.copyToClipboard`)
                    | Скопировать в буфер обмена
                  | )
                div(style="clear:both")
              // /ko
        // /ko
        // ko if: !endOfHistory()
        a.more(href="javascript:void(0)" data-bind=`click: lookBackInHistory`)
          | Ещё
        // /ko

#service-picker-template
  ul.nav.nav-pills
    li(class="drop{{drop}}")
      button.dropdown-toggle.btn.btn-action(type="button" data-toggle="dropdown")
        span.glyphicon.glyphicon-plus
        | Добавить услугу
      ul.dropdown-menu
        | {{# dictionary.source }}
        li
          // TODO FIXME get rid of global shit and dirty hax (see "onclick")
          a(href="#" onclick="addService('{{model}}'); return false;")
            span.glyphicon(class="glyphicon-{{icon}}")
            | {{ label }}
        | {{/ dictionary.source }}

#alert-template(type='text/html')
  .alert
    button.close(type="button", data-dismiss="alert") ×
    strong Внимание!
    | {{message}}

#contract-content-template(type='text/html')
  #contract-content(data-bind="renderContract: '{{ title }}'")

#callType-special-field-template.field-template
  .form-group
    .col-sm-4(data-bind="with: callType.btn")
      button.btn.btn-danger.btn-sm(
        data-bind="click: click, visible: visible")
        span(data-bind="text: text")
    .col-sm-8
      p.form-control-static
        strong(data-bind="text: callType.local")

.field-template#case-vinChecked-field-template
  +fieldControlGroup
    +dictInputChevron("Local", "glyphicon-chevron-down")
  .form-group(data-bind="visible: _canDiag")
    label.col-sm-4.control-label
      | &nbsp;
    .col-sm-8
      .input-group.input-group-sm
        a(data-bind="click: _startDiag, visible: _canStartDiag")
          | Начать диагностику
        a(data-bind="click: _showDiag, visible: _canProceedDiag")
          | Продолжить диагностику
        a(data-bind="click: _showDiag, visible: _canShowDiag")
          | История диагностики

.field-template#city-dict-with-rush-badge-field-template
  // Copypasted from +fieldControlGroup beacause it does not allow to append
  // elements after input-group
  .form-group.has-feedback(data-bind=`
    css     : {'has-error': {{name}}Not},
    visible : {{name}}Visible,
  `)
    label.col-sm-4.control-label
      +labelWithInfo("{{name}}")
    .col-sm-8
      .input-group.input-group-sm
        +dictInputChevron("Local", "glyphicon-chevron-down")
      .help-block(data-bind="visible: {{name}}InRush")
        | В этом городе аврал

.field-template#customer-feedback
  .form-group
    label.col-sm-4.control-label
      +labelWithInfo("{{name}}")
    .col-sm-8
      .input-group.input-group-sm
        button.btn.btn-info(href="#"
          data-bind="click: {{name}}BtnClick")
          | Открыть в модальном окне
